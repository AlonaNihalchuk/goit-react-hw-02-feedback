{"version":3,"sources":["components/Feedback/FeedbackOptions .js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Feedback/FeedbackOptions.module.css"],"names":["FeedbackOptions","onIncrement","options","className","styles","feedbackButtons","map","option","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleIncrement","e","setState","prevState","target","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","keys","this","onLeaveFeedback","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kTA0BeA,EAvBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACtC,OACE,oBAAIC,UAAWC,IAAOC,gBAAtB,SACGH,EAAQI,KAAI,SAAAC,GAAM,OACjB,oBAAiBJ,UAAWC,IAAOI,OAAnC,SACE,wBACEC,KAAK,SACLC,KAAMH,EACNJ,UAAU,MACVQ,QAASV,EAJX,SAMGM,KAPIA,SC2BFK,EAhCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKd,UAAU,qBAAf,UACE,4CACA,+BACE,6BACE,uCAAUU,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,iBCZKC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmDEC,E,4MA9CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAC,GAChB,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAEG,OAAOhB,KAAOe,EAAUF,EAAEG,OAAOhB,MAAQ,O,EAIlDiB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEvEC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKd,MAAMR,KAAO,EAAKc,qBAAwB,M,4CAGpE,WACE,OACE,0BAASxB,UAAU,kBAAnB,UACE,uDACA,cAAC,EAAD,CACED,QAAS0B,OAAOQ,KAAKC,KAAKhB,OAC1BlB,UAAU,kBACVF,YAAaoC,KAAKf,gBAClBgB,gBAAiBD,KAAKV,qBAEvBU,KAAKJ,kCACJ,cAAC,EAAD,CACEpB,KAAMwB,KAAKhB,MAAMR,KACjBC,QAASuB,KAAKhB,MAAMP,QACpBC,IAAKsB,KAAKhB,MAAMN,IAChBC,MAAOqB,KAAKV,qBACZV,mBAAoBoB,KAAKJ,oCAG3B,cAAC,EAAD,CAAcd,QAAQ,6B,GAxCdoB,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,OAAS,mC","file":"static/js/main.60687907.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onIncrement, options }) => {\n  return (\n    <ul className={styles.feedbackButtons}>\n      {options.map(option => (\n        <li key={option} className={styles.button}>\n          <button\n            type=\"button\"\n            name={option}\n            className=\"btn\"\n            onClick={onIncrement}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onIncrement: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className=\"statistics-section\">\n      <h2>Statistics</h2>\n      <ul>\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {total}</p>\n        </li>\n        <li>\n          <p>Positive feedback: {positivePercentage} %</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import './App.css';\nimport React from 'react';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions ';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    this.setState(prevState => {\n      return {\n        [e.target.name]: prevState[e.target.name] + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <section className=\"feedbackSection\">\n        <h1>Please leave feedback</h1>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          className=\"feedbackOptions\"\n          onIncrement={this.handleIncrement}\n          onLeaveFeedback={this.countTotalFeedback}\n        />\n        {this.countPositiveFeedbackPercentage() ? (\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButtons\":\"FeedbackOptions_feedbackButtons__1x9Hs\",\"button\":\"FeedbackOptions_button__14w9_\"};"],"sourceRoot":""}